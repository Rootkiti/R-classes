hist(df1$ages, ylab = "Frequency", xlab = "Ages", main = "Age Distribution")
df1[df1$Age_Group == '(70,80]']
(counts = table(df1$Age_Group))
barplot(counts, ylab = "frequency")
hist(df1$ages, ylab = "Frequency", xlab = "Ages", main = "Age Distribution")
df1[Age_Group == '(70,80]']
df1$Age_Group
indices_70_80 <- which(Age_Group == "(70,80]")
(counts = table(df1$Age_Group))
barplot(counts, ylab = "frequency")
hist(df1$ages, ylab = "Frequency", xlab = "Ages", main = "Age Distribution")
df1[Age_Group == "(70,80]",]
(counts = table(df1$Age_Group))
barplot(counts, ylab = "frequency")
hist(df1$ages, ylab = "Frequency", xlab = "Ages", main = "Age Distribution")
df1[df1$Age_Group == "(70,80]",]
(counts = table(df1$Age_Group))
barplot(counts, ylab = "frequency")
hist(df1$ages, ylab = "Frequency", xlab = "Ages", main = "Age Distribution")
df1[df1$Age_Group == "(70,80]",]$ID
(counts = table(df1$Age_Group))
barplot(counts, ylab = "frequency")
hist(df1$ages, ylab = "Frequency", xlab = "Ages", main = "Age Distribution")
df1[df1$Age_Group == "(70,80]",]$ID
df1[df1$Age_Group == "(70,80]",]$ID
(counts = table(df1$Age_Group))
barplot(counts, ylab = "frequency")
hist(df1$ages, ylab = "Frequency", xlab = "Ages", main = "Age Distribution")
(IDs_in_70_80_group = df1[df1$Age_Group == "(70,80]",]$ID)
(counts = table(df1$Age_Group))
(counts_df <- data.frame(
age_groups = names(counts),
counts = as.numeric(counts)
))
barplot(counts, ylab = "frequency")
hist(df1$ages, ylab = "Frequency", xlab = "Ages", main = "Age Distribution")
(IDs_in_70_80_group = df1[df1$Age_Group == "(70,80]",]$ID)
(counts = table(df1$Age_Group))
(counts_df <- data.frame(
age_groups = names(counts),
counts = as.numeric(counts)
))
barplot(counts, ylab = "frequency")
hist(df1$ages, ylab = "Frequency", xlab = "Ages", main = "Age Distribution")
(IDs_in_70_80_group = df1[df1$Age_Group == "(70,80]",1])
IDs_in_70_80_group
(counts = table(df1$Age_Group))
(counts_df <- data.frame(
age_groups = names(counts),
counts = as.numeric(counts)
))
barplot(counts, ylab = "frequency")
hist(df1$ages, ylab = "Frequency", xlab = "Ages", main = "Age Distribution")
(IDs_in_70_80_group = df1[df1$Age_Group == "(70,80]",1])
knitr::opts_chunk$set(echo = FALSE)
set.seed(42)
data <- sample(20,100, size=80)
set.seed(42)
data <- sample(20,100, size=80)
data
Q <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
Q <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
Q
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
t(quat)
t(quat)
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
df <- as.data.frame(t(quat))
set.seed(42)
data <- sample(20,100)
set.seed(42)
data <- sample(20:100, size=80)
data
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
quat
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
df <- as.data.frame(t(quat))
names(df) <- paste0('Q', 1:length(quat))
rownames(df) <- "stats"
df$IQR <- df$Q3 - df$Q1
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
df <- as.data.frame(t(quat))
names(df) <- paste0('Q', 1:length(quat))
rownames(df) <- "stats"
df$IQR <- df$Q3 - df$Q1
df$LowerLim = df$Q1 - 1.5*df$IQR
df$LowerLim = df$Q3 + 1.5*df$IQR
df
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
df <- as.data.frame(t(quat))
names(df) <- paste0('Q', 1:length(quat))
rownames(df) <- "stats"
df$IQR <- df$Q3 - df$Q1
df$LowerLim = df$Q1 - 1.5*df$IQR
df$UpperLim = df$Q3 + 1.5*df$IQR
df
set.seed(42)
data <- sample(2.25:100, size=80)
data
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
df <- as.data.frame(t(quat))
names(df) <- paste0('Q', 1:length(quat))
rownames(df) <- "stats"
df$IQR <- df$Q3 - df$Q1
df$LowerLim = df$Q1 - 1.5*df$IQR
df$UpperLim = df$Q3 + 1.5*df$IQR
df
set.seed(42)
data <- sample(2.25:100, , replace = FALSE)
data
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
df <- as.data.frame(t(quat))
names(df) <- paste0('Q', 1:length(quat))
rownames(df) <- "stats"
df$IQR <- df$Q3 - df$Q1
df$LowerLim = df$Q1 - 1.5*df$IQR
df$UpperLim = df$Q3 + 1.5*df$IQR
df
set.seed(42)
data <- sample(2.25:100, , replace = FALSE)
data[20,35] <- data[20,25] *100
set.seed(42)
data <- sample(2.25:100, , replace = FALSE)
data[c(20,35)] <- data[20,25] *100
set.seed(42)
data <- sample(2.25:100, , replace = FALSE)
data[c(20,35)] <- data[c(20,25)] *100
data
set.seed(42)
data <- sample(2.25:100, , replace = FALSE)
data[c(20,35)] <- data[c(20,25)] *10
data
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
df <- as.data.frame(t(quat))
names(df) <- paste0('Q', 1:length(quat))
rownames(df) <- "stats"
df$IQR <- df$Q3 - df$Q1
df$LowerLim = df$Q1 - 1.5*df$IQR
df$UpperLim = df$Q3 + 1.5*df$IQR
df
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
df <- as.data.frame(t(quat))
names(df) <- paste0('Q', 1:length(quat))
rownames(df) <- "stats"
df$IQR <- df$Q3 - df$Q1
df$LowerLim = df$Q1 - 1.5*df$IQR
df$UpperLim = df$Q3 + 1.5*df$IQR
df
quat
set.seed(42)
data <- sample(2.25:100, , replace = FALSE)
data[c(20,35)] <- data[c(20,25)] *10
data
barplot(data)
set.seed(42)
data <- sample(2.25:100, , replace = FALSE)
data[c(20,35)] <- data[c(20,25)] *10
data
boxplot(data)
(d_out <- data.frame(x = data, outlier = data < d$LowerLim | data > d$UpperLim))
(d_out <- data.frame(x = data, outlier = data < d$fLowerLim | data > df$UpperLim))
(d_out <- data.frame(x = data, outlier = data < df$LowerLim | data > df$UpperLim))
data[d_out$outlier]
(bxpt <- boxplot(data, range = 1.5, plot = FALSE)) # we do not plot
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
df <- as.data.frame(t(quat))
names(df) <- paste0('Q', 1:length(quat))
rownames(df) <- "stats"
df$IQR <- df$Q3 - df$Q1
df$LowerLim = df$Q1 - 2.5*df$IQR
df$UpperLim = df$Q3 + 2.5*df$IQR
df
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
df <- as.data.frame(t(quat))
names(df) <- paste0('Q', 1:length(quat))
rownames(df) <- "stats"
df$IQR <- df$Q3 - df$Q1
df$LowerLim = df$Q1 - 0.5*df$IQR
df$UpperLim = df$Q3 + 0.5*df$IQR
df
(d_out <- data.frame(x = data, outlier = data < df$LowerLim | data > df$UpperLim))
data[d_out$outlier]
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
df <- as.data.frame(t(quat))
names(df) <- paste0('Q', 1:length(quat))
rownames(df) <- "stats"
df$IQR <- df$Q3 - df$Q1
df$LowerLim = df$Q1 - 1.5*df$IQR
df$UpperLim = df$Q3 + 1.5*df$IQR
df
(d_out <- data.frame(x = data, outlier = data < df$LowerLim | data > df$UpperLim))
data[d_out$outlier]
(bxpt <- boxplot(data, range = 1.5, plot = FALSE)) # we do not plot
df
data
(d_out <- data.frame(x = data, outlier = data < df$LowerLim | data > df$UpperLim))
# find all outliers
data[d_out$outlier] <- NA # or x[x %in% bxpt$out]
data[d_out$outlier] <- mean(x, na.rm = TRUE)
# boxplot of imputed x
par(mfrow = c(1, 2))
boxplot(data_copy, main = "Before\nhandling outliers", cex.main = 0.7)
boxplot(data_copy, main = "Before\nhandling outliers", cex.main = 0.7)
knitr::opts_chunk$set(echo = FALSE)
set.seed(42)
data <- sample(2.25:100, , replace = FALSE)
data[c(20,35)] <- data[c(20,25)] *10
data
boxplot(data)
data_copy <- data
quat <- as.numeric(quantile(data, probs = c(0.25, 0.5, 0.75)))
df <- as.data.frame(t(quat))
names(df) <- paste0('Q', 1:length(quat))
rownames(df) <- "stats"
df$IQR <- df$Q3 - df$Q1
df$LowerLim = df$Q1 - 1.5*df$IQR
df$UpperLim = df$Q3 + 1.5*df$IQR
df
(d_out <- data.frame(x = data, outlier = data < df$LowerLim | data > df$UpperLim))
data[d_out$outlier]
(bxpt <- boxplot(data, range = 1.5, plot = FALSE)) # we do not plot
# find all outliers
data[d_out$outlier] <- NA # or x[x %in% bxpt$out]
data[d_out$outlier] <- mean(x, na.rm = TRUE)
# boxplot of imputed x
par(mfrow = c(1, 2))
boxplot(data_copy, main = "Before\nhandling outliers", cex.main = 0.7)
boxplot(data, main = "After\nhandling outliers", col = "green", cex.main = 0.7)
# find all outliers
data[d_out$outlier] <- NA # or x[x %in% bxpt$out]
data[d_out$outlier] <- mean(x, na.rm = TRUE)
# boxplot of imputed x
par(mfrow = c(1, 2))
boxplot(data_copy, main = "Before\nhandling outliers", cex.main = 0.7)
boxplot(data, main = "After\nhandling outliers", col = "navyblue", cex.main = 0.7)
# find all outliers
data[d_out$outlier] <- NA # or x[x %in% bxpt$out]
data[d_out$outlier] <- mean(x, na.rm = TRUE)
# boxplot of imputed x
par(mfrow = c(1, 2))
boxplot(data_copy, main = "Before\nhandling outliers", cex.main = 0.7)
boxplot(data, main = "After\nhandling outliers", col = "skyblue", cex.main = 0.7)
# find all outliers
data[d_out$outlier] <- NA # or x[x %in% bxpt$out]
data[d_out$outlier] <- mean(x, na.rm = TRUE)
# boxplot of imputed x
par(mfrow = c(1, 2))
boxplot(data_copy, main = "Before\nhandling outliers", cex.main = 0.7)
boxplot(data, main = "After\nhandling outliers", col = "lightskyblue", cex.main = 0.7)
reticulate::repl_python()
print("hello wold)
print("hello wold")
import pandas as pd
print("hello wold")
pip install pandas
pip install pandas
quit
fre <= c(Female=45, Children=20, Male=1.5)
fre <= c(Female=45, Children=20, Male=1.5)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre)
?barplot
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre)
?barplot
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre)))
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))))
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), horiz = TRUE)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), horiz = TRUE, angle = 180)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), horiz = TRUE, angle = 90)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), horiz = TRUE, space = 1)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), horiz = TRUE, space = 0.01)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), horiz = TRUE, space = 0.1)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), horiz = TRUE, space = 0.2)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), horiz = TRUE, space = 0.02)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), horiz = TRUE, space = 0.03)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), horiz = TRUE, space = 0.05)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), horiz = TRUE, space = 0.001)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre))
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),
width = 2)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),
width = .2)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),
width = c(1,1,1))
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),
width = c(0.2))
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),
width = c(0.2,0.01,0.001))
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),
width = c(0.002,0.01,0.001))
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),
width = c(0.0002,0.01,0.001))
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),
width = c(0.002,0.01,0.001))
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),
width = c(0.001,0.01,0.001))
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),
width = c(0.001,0.001,0.001))
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),
width = fre)
fre <- c(Female=45, Children=20, Male=1.5)
barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),
)
fre
fre <- c(Female=45, Children=20, Male=1.5)
barplot_values<-barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),
)
text(x = barplot_values, y = fre, labels = fre, pos = 3, cex = 0.8, col = "black")
fre <- c(Female=45, Children=20, Male=1.5)
barplot_values<-barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),ylim = c(0, max(fre) * 1.2)
)
text(x = barplot_values, y = fre, labels = fre, pos = 3, cex = 0.8, col = "black")
fre <- c(Female=45, Children=20, Male=15)
barplot_values<-barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),ylim = c(0, max(fre) * 1.2)
)
text(x = barplot_values, y = fre, labels = fre, pos = 3, cex = 0.8, col = "black")
fre <- c(Female=45, Children=20, Male=15)
barplot_values<-barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),ylim = c(0, max(fre) * 1.2)
)
text(x = barplot_values, y = fre, labels = fre, pos = 1, cex = 0.8, col = "black")
fre <- c(Female=45, Children=20, Male=15)
barplot_values<-barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),ylim = c(0, max(fre) * 1.2)
)
text(x = barplot_values, y = fre, labels = fre, pos = 2, cex = 0.8, col = "black")
fre <- c(Female=45, Children=20, Male=15)
barplot_values<-barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),ylim = c(0, max(fre) * 1.2)
)
text(x = barplot_values, y = fre, labels = fre, pos = 3, cex = 0.8, col = "black")
?text
fre <- c(Female=45, Children=20, Male=15)
barplot_values<-barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),ylim = c(0, max(fre) * 1.2)
)
text(x = barplot_values, y = fre, labels = fre, pos = 3, cex = 0.8, col = "black")
?text
barplot_values
fre <- c(Female=45, Children=20, Male=15)
barplot_values<-barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),ylim = c(0, max(fre) * 1.2)
)
text(x = barplot_values, y = fre, labels = names(fre), pos = 3, cex = 0.8, col = "black")
?text
fre <- c(Female=45, Children=20, Male=15)
barplot_values<-barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),ylim = c(0, max(fre) * 1.2)
)
text(x = barplot_values, y = fre, labels = as.numeric(fre), pos = 3, cex = 0.8, col = "black")
?text
fre <- c(Female=45, Children=20, Male=15)
barplot_values<-barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),ylim = c(0, max(fre) * 1.2)
)
text(x = barplot_values, y = fre, labels = fre, pos = 3, cex = 0.8, col = "black")
?text
y
fre <- c(Female=45, Children=20, Male=15)
barplot_values<-barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),ylim = c(0, max(fre) * 1.2)
)
text(x = barplot_values, y = fre, labels = fre, pos = 3, cex = 0.8, col = "black")
?text
fre <- c(Female=45, Children=20, Male=15)
barplot_values<-barplot(fre, col = rainbow(length(names(fre))), space = 0.001, legend.text = names(fre),ylim = c(0, max(fre) * 1.2)
)
text(x = barplot_values, y = fre, labels = fre, pos = 3, cex = 0.8, col = "black")
lines(density(fre))
hist(fre)
hist(fre)
lines(density(fre), )
hist(data)
lines(density(data), )
hist(fre)
lines(density(fre), )
hist(fre)
lines(density(fre), col="red")
hist(fre)
lines(density(fre), col="red", lwd=3)
hist(iris$Sepal.Length)
lines(density(iris$Sepal.Length), col="red", lwd=3)
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=3)
#hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=3)
#hist(iris$Sepal.Length, probability = T)
lines(iris$Sepal.Length, col="red", lwd=3)
#hist(iris$Sepal.Length, probability = T)
line(iris$Sepal.Length, col="red", lwd=3)
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=3)
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=2)
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1)
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
?lines
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5, ly)
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5, ly)
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Sepal.Length)
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Sepal.Length)
lines(stats::lowess(iris$Sepal.Length))
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
#plot(iris$Sepal.Length)
lines(stats::lowess(iris$Sepal.Length))
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Sepal.Length)
lines(stats::lowess(iris$Sepal.Length))
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
#par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
#par(mfrow = c(1, 2))
with(hist(iris$Sepal.Length, probability = T))
#par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Sepal.Length,iris$Petal.Length)
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Sepal.Length,iris$Petal.Length, pch=16)
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Sepal.Length,iris$Petal.Length, pch=16, col='lightskyblue')
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Sepal.Length,iris$Petal.Length, pch=16, col='lightskyblue')
lines(1:10)
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Sepal.Length,iris$Petal.Length, pch=16, col='lightskyblue')
lines(min(iris$Sepal.Length):max(iris$Sepal.Length))
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Petal.Length,iris$Petal.Width, pch=16, col='lightskyblue')
lines()
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Petal.Length,iris$Petal.Width, pch=16, col='lightskyblue')
lines(1:10)
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Petal.Length,iris$Petal.Width, pch=16, col='lightskyblue')
lines(0:10)
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Petal.Length,iris$Petal.Width, pch=16, col='lightskyblue')
lines(0:10, lty = 2, lwd = 2)
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Petal.Length,iris$Petal.Width, pch=16, col='lightskyblue')
lines(iris$Sepal.Width, lty = 2, lwd = 2)
par(mfrow = c(1, 2))
hist(iris$Sepal.Length, probability = T)
lines(density(iris$Sepal.Length), col="red", lwd=1.5)
plot(iris$Petal.Length,iris$Petal.Width, pch=16, col='lightskyblue')
lines(0:10, lty = 2, lwd = 2)
install.packages("shiny")
library(shiny)
