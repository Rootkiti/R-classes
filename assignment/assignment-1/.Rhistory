# write your code here
(survey_data = read.csv("data.csv"))
# write your code here
cat("the dataset has", nrow(survey_data), "rows")
# write your code here
cat("the dataset has", nrow(survey_data), "rows")
cat("the dataset has", ncol(survey_data), "columns")
# write your code here
cat("the dataset has", nrow(survey_data), "rows and ",ncol(survey_data), "columns")
# write your code here
cat(sum(survey_data["Completed.Program"] == "Master's degree"), "have master's degree")
# write your code here
cat(sum(survey_data["Completed.Program"] == "Master's degree"), "participants have master's degree")
# write your code here
cat(sum(survey_data["Completed.Program"] == "Bachelor's degree"), "participants have master's degree")
# write your code here
cat(sum(survey_data["Completed.Program"] == "Bachelor's degree" && survey_data["Gender"] == "Female"), "participants have 	Bachelor's degree")
# write your code here
cat(sum((survey_data["Completed.Program"] == "Bachelor's degree") & (survey_data["Gender"] == "Female")), "participants have 	Bachelor's degree")
# write your code here
cat(sum((survey_data["Completed.Program"] == "Bachelor's degree") & (survey_data["Gender"] == "Female")), " female participants have Bachelor's degree")
# write your code here
sum(survey_data["Completed.Program"] == "Master's degree")
# write your code here
( mastar_holder <- sum(survey_data["Completed.Program"] == "Master's degree"))
# write your code here
( mastar_holder <- sum(survey_data["Completed.Program"] == "Master's degree"))
(master_tabel <- table(survey_data["Completed.Program"] == "Master's degree")))
# write your code here
( mastar_holder <- sum(survey_data["Completed.Program"] == "Master's degree"))
(master_tabel <- table(survey_data["Completed.Program"] == "Master's degree"))
# write your code here
( mastar_holder <- sum(survey_data["Completed.Program"] == "Master's degree"))
# write your code here
( mastar_holder <- survey_data["Completed.Program"] == "Master's degree")
# write your code here
( mastar_holder <- subset(survey_data, Completed.Program == "Master's degree"))
# write your code here
( mastar_holder <- subset(survey_data, Completed.Program == "Master's degree"))
(master_holder_gender <- mastar_holder["Gender"])
# write your code here
( mastar_holder <- subset(survey_data, Completed.Program == "Master's degree"))
(master_holder_gender <- mastar_holder["Gender"])
(master_gender_table = table(master_holder_gender))
# write your code here
( mastar_holder <- subset(survey_data, Completed.Program == "Master's degree"))
(master_holder_gender <- mastar_holder["Gender"])
(master_gender_table = table(master_holder_gender))
(prob.table(master_gender_table))
# write your code here
( mastar_holder <- subset(survey_data, Completed.Program == "Master's degree"))
(master_holder_gender <- mastar_holder["Gender"])
(master_gender_table = table(master_holder_gender))
(prop.table(master_gender_table))
# write your code here
( mastar_holder <- subset(survey_data, Completed.Program == "Master's degree"))
(master_holder_gender <- mastar_holder["Gender"])
(master_gender_table = table(master_holder_gender))
(prop.table(master_gender_table))
# write your code here
( mastar_holder <- subset(survey_data, Completed.Program == "Master's degree"))
(master_holder_gender <- mastar_holder["Gender"])
(master_gender_table = table(master_holder_gender))
(prop.table(master_gender_table))
# write your code here
( mastar_holder <- subset(survey_data, Completed.Program == "Master's degree"))
(master_holder_gender <- mastar_holder["Gender"])
(master_gender_table = table(master_holder_gender))
(master_prop_tabel = prop.table(master_gender_table))
master_prop_tabel["Male"]
# write your code here
( mastar_holder <- subset(survey_data, Completed.Program == "Master's degree"))
(master_holder_gender <- mastar_holder["Gender"])
(master_gender_table = table(master_holder_gender))
(master_prop_tabel = prop.table(master_gender_table))
cat("the percentage of Male participants with master's degree is ",master_prop_tabel["Male"]*100,"%")
(as.Date(survet_data['Date.of.Birth']))
(as.Date(survey_data['Date.of.Birth']))
(as.Date(survey_data$Date.of.Birth, format = "%d/%m/%Y"))
(as.numeric(difftime(sys.Date(),as.Date(survey_data$Date.of.Birth), format = "%d/%m/%Y", units = "days"))%/% 365.25)
(as.numeric(difftime(Sys.Date(),as.Date(survey_data$Date.of.Birth), format = "%d/%m/%Y", units = "days"))%/% 365.25)
# Assuming survey_data is your data frame and Date.of.Birth is in "day/month/year" format
formaed_date <- as.Date(survey_data$Date.of.Birth, format = "%d/%m/%Y")
# Calculate the age
Current_Age <- as.numeric(difftime(Sys.Date(), formaed_date, units = "days")) %/% 365.25
# Assuming survey_data is your data frame and Date.of.Birth is in "day/month/year" format
formaed_date <- as.Date(survey_data$Date.of.Birth, format = "%d/%m/%Y")
# Calculate the age
(Current_Age <- as.numeric(difftime(Sys.Date(), formaed_date, units = "days")) %/% 365.25)
# Assuming survey_data is your data frame and Date.of.Birth is in "day/month/year" format
formaed_date <- as.Date(survey_data$Date.of.Birth, format = "%d/%m/%Y")
# Calculate the age
(survey_data$Age <- as.numeric(difftime(Sys.Date(), formaed_date, units = "days")) %/% 365.25)
# Assuming survey_data is your data frame and Date.of.Birth is in "day/month/year" format
formaed_date <- as.Date(survey_data$Date.of.Birth, format = "%d/%m/%Y")
# Calculate the age
(survey_data$Age <- as.numeric(difftime(Sys.Date(), formaed_date, units = "days")) %/% 365.25)
view(survey_data)
# Assuming survey_data is your data frame and Date.of.Birth is in "day/month/year" format
formaed_date <- as.Date(survey_data$Date.of.Birth, format = "%d/%m/%Y")
# Calculate the age
(survey_data$Age <- as.numeric(difftime(Sys.Date(), formaed_date, units = "days")) %/% 365.25)
urvey_data
# Assuming survey_data is your data frame and Date.of.Birth is in "day/month/year" format
formaed_date <- as.Date(survey_data$Date.of.Birth, format = "%d/%m/%Y")
# Calculate the age
(survey_data$Age <- as.numeric(difftime(Sys.Date(), formaed_date, units = "days")) %/% 365.25)
survey_data
# write your code here
(subset(survey_data, Gender="Male" & Age < 30))
# write your code here
(subset(survey_data, Gender="Male"))
# write your code here
(subset(survey_data$Gender="Male"))
# write your code here
(subset(survey_data, Gender=="Male" & Age < 30))
# write your code here
((dim(subset(survey_data, Gender=="Male" & Age < 30))[1] / dim(survey_data)[1]) *100)
# write your code here
((dim(subset(survey_data, Gender=="Male"))[1] / dim(survey_data)[1]) *100)
# write your code here
((dim(subset(survey_data, Gender=="Male" & Age < 30))[1] / dim(survey_data)[1]) *100)
# write your code here
((dim(subset(survey_data, Gender=="Male" & Age < 30))[1] / dim(survey_data)[1]) *100)
# write your code here
((dim(subset(survey_data, Gender=="Male" & Age < 30))[1] / dim(survey_data)[1]) *100)
# Assuming survey_data is your data frame and Date.of.Birth is in "day/month/year" format
formaed_date <- as.Date(survey_data$Date.of.Birth, format = "%d/%m/%Y")
# Calculate the age
#(survey_data$Age <- as.numeric(difftime(Sys.Date(), formaed_date, units = "days")) %/% 365.25)
#survey_data
# Assuming survey_data is your data frame and Date.of.Birth is in "day/month/year" format
(formaed_date <- as.Date(survey_data$Date.of.Birth, format = "%d/%m/%Y"))
# Calculate the age
#(survey_data$Age <- as.numeric(difftime(Sys.Date(), formaed_date, units = "days")) %/% 365.25)
#survey_data
# write your code here
males <- subset(survey_data, Gender=="Male")
mean(males, males&Age < 30) *100
males <- subset(survey_data, Gender=="Male")
males
# write your code here
males <- subset(survey_data, Gender=="Male")
prop.table(table(males))[1] * 100
# write your code here
males <- subset(survey_data, Gender=="Male")
prop.table(table(males))
males
# write your code here
males <- subset(survey_data, Gender=="Male")
prop.table(table(males$Age < 30))
# write your code here
males <- subset(survey_data, Gender=="Male")
prop.table(table(males$Age < 30))[1] * 100
# write your code here
males <- subset(survey_data, Gender=="Male")
prop.table(table(males$Age < 30))[2] * 100
survey_data$Background
survey_data$Background %information%
survey_data$Background == %information%
# Filter rows where "information" is found in the Background column
survey_data[grepl("information", survey_data$Background, ignore.case = TRUE), ]
# Filter rows where "information" is found in the Background column
( survey_data[grepl("information", survey_data$Institution, ignore.case = TRUE), ])
# Filter rows where "information" is found in the Background column
(survey_data[grepl("UR", survey_data$Institution, ignore.case = TRUE), ])
# Filter rows where "information" is found in the Background column
(survey_data[grepl("UR", survey_data$Institution, ignore.case = TRUE)])
# Filter rows where "information" is found in the Background column
(survey_data[grepl("UR", survey_data$Institution, ignore.case = TRUE), ])
# Filter rows where "information" is found in the Background column
(
survey_data[grepl("UR", survey_data$Institution, ignore.case = TRUE), ] &
grepl("Male", survey_data$Gender, ignore.case = TRUE), ]
# Filter rows where "information" is found in the Background column
(
survey_data[grepl("UR", survey_data$Institution, ignore.case = TRUE), ] &
grepl("Male", survey_data$Gender, ignore.case = TRUE) ]
# Filter rows where "information" is found in the Background column
(
survey_data[grepl("UR", survey_data$Institution, ignore.case = TRUE) ] &
grepl("Male", survey_data$Gender, ignore.case = TRUE) ]
# Filter rows where "information" is found in the Background column
(
survey_data[grepl("UR", survey_data$Institution, ignore.case = TRUE) &
grepl("Male", survey_data$Gender, ignore.case = TRUE), ]
)
# Filter rows where "information" is found in the Background column
(
survey_data[grepl("UR", survey_data$Institution, ignore.case = TRUE) &
grepl("Male", survey_data$Gender, ignore.case = TRUE) ]
)
# Filter rows where "information" is found in the Background column
(
survey_data[grepl("UR", survey_data$Institution, ignore.case = TRUE) &
grepl("Male", survey_data$Gender, ignore.case = TRUE), ]
)
boxplot(survey_data$Age)
boxplot(survey_data$Age)
survey_data$Age < 0
survey_data$Age < 10
mean(survey_data$Age, na.rm = TRUE)
is.na(survey_data$Age)
boxplot(survey_data$Age)
survey_data$Age[survey_data$Age < 10] <- NA
mean(survey_data$Age, na.rm = TRUE)
is.na(survey_data$Age)
is.na(survey_data$Age)
survey_data$Age[survey_data$Age < 10] <- NA
mean(survey_data$Age, na.rm = TRUE)
survey_data$Age[is.na(survey_data$Age)]  <- mean(survey_data$Age, na.rm = TRUE)
boxplot(survey_data$Age)
# write your code here
(survey_data = read.csv("data.csv"))
# write your code here
cat("the dataset has", nrow(survey_data), "rows and ",ncol(survey_data), "columns")
# write your code here
cat(sum(survey_data["Completed.Program"] == "Master's degree"), "participants have master's degree")
# write your code here
cat(sum(survey_data["Completed.Program"] == "Bachelor's degree"), "participants have 	Bachelor's degree")
# write your code here
cat(sum((survey_data["Completed.Program"] == "Bachelor's degree") & (survey_data["Gender"] == "Female")), " female participants have Bachelor's degree")
# write your code here
( mastar_holder <- subset(survey_data, Completed.Program == "Master's degree"))
(master_holder_gender <- mastar_holder["Gender"])
(master_gender_table = table(master_holder_gender))
(master_prop_tabel = prop.table(master_gender_table))
cat("the percentage of Male participants with master's degree is ",master_prop_tabel["Male"]*100,"%")
# Assuming survey_data is your data frame and Date.of.Birth is in "day/month/year" format
(formaed_date <- as.Date(survey_data$Date.of.Birth, format = "%d/%m/%Y"))
# Calculate the age
(survey_data$Age <- as.numeric(difftime(Sys.Date(), formaed_date, units = "days")) / 365.25)
#survey_data
# write your code here
males <- subset(survey_data, Gender=="Male")
prop.table(table(males$Age < 30))[2] * 100
# Filter rows where "information" is found in the Background column
(
survey_data[grepl("UR", survey_data$Institution, ignore.case = TRUE) &
grepl("Male", survey_data$Gender, ignore.case = TRUE), ]
)
survey_data$Age[survey_data$Age < 10] <- NA
mean(survey_data$Age, na.rm = TRUE)
survey_data$Age[is.na(survey_data$Age)]  <- mean(survey_data$Age, na.rm = TRUE)
boxplot(survey_data$Age)
