dim(houseH)
# your code here
View(houseH)
str(houseH) # Understand the data structure (types, dimensions, column details).
data.frame(summary(houseH))  # summary statistics for each column
# top 6 rows
head(houseH)
# last 6 rows
tail(houseH)
# column names
names(houseH)
# counting missing values for columns
data.frame("Sum of Missing values by colmuns" = colSums(is.na(houseH)))
# identifying columns type
data.frame(sapply(houseH, class))
# your code here
columns <- c("HV001", "HV009", "HV010", "HV011", "HV014", "SHDISTRICT", "HV024", "HV025", "HV040", "HV227", "HV228", "HV270", "HV105", "HV106", "HML3", "HML4", "HML7",
"HML10", "HML22", "HML32","HML33", "HML35")
df <- houseH[,columns]
df
new_names <- c("cluster_no","no_HH_member","no_elig_wom_HH","no_elig_men_HH","child_under_5years","district",
"province","locality","cluster_alt_M","mosquito_net_yes","child_under_5years_net_yes",
"socio-economic_status","HH_members_ages","education_level","net_observed",
"months_since_net_obtained","net_brand","ITN","antenatal","malaria_measures",
"malaria_blood_T_result","malaria_rapid_T_result")
length(new_names)
names(df) <- new_names
names(df)
df
unique(df$province)
dd <- unique(df$province)
dd
dd[2]
length(dd)
dim(dd)
dim(dd)
range(dd)
dd['lable']
dd
labelled::val_labels(dd)
as_factor(dd)
dd
df$province <- as_factor(df$province)
df$province
df
head(df,100)
View(df)
knitr::opts_chunk$set(echo = TRUE)
options(warn = -1)
# required package
library(haven)
# import data
houseH <- read_sav("DHS2020/RWPR81FL.sav")
# data dimension
dim(houseH)
# your code here
View(houseH)
str(houseH) # Understand the data structure (types, dimensions, column details).
data.frame(summary(houseH))  # summary statistics for each column
# top 6 rows
head(houseH)
# last 6 rows
tail(houseH)
# column names
names(houseH)
# counting missing values for columns
data.frame("Sum of Missing values by colmuns" = colSums(is.na(houseH)))
# identifying columns type
data.frame(sapply(houseH, class))
# your code here
columns <- c("HV001", "HV009", "HV010", "HV011", "HV014", "SHDISTRICT", "HV024", "HV025", "HV040", "HV227", "HV228", "HV270", "HV105", "HV106", "HML3", "HML4", "HML7",
"HML10", "HML22", "HML32","HML33", "HML35")
df <- houseH[,columns]
new_names <- c("cluster_no","no_HH_member","no_elig_wom_HH","no_elig_men_HH","child_under_5years","district",
"province","locality","cluster_alt_M","mosquito_net_yes","child_under_5years_net_yes",
"socio-economic_status","HH_members_ages","education_level","net_observed",
"months_since_net_obtained","net_brand","ITN","antenatal","malaria_measures",
"malaria_blood_T_result","malaria_rapid_T_result")
length(new_names)
names(df) <- new_names
head(df,100)
options(warn = -1)
# required package
library(haven)
# import data
houseH <- read_sav("DHS2020/RWPR81FL.sav")
# data dimension
dim(houseH)
houseH
View(houseH)
View(houseH)
View(houseH)
View(houseH)
View(houseH)
View(houseH)
View(houseH)
View(houseH)
dd
df$province <- as_factor(df$province)
df
unique(df$district)
df$district <- as_factor(df$district)
df
unique(df$locality)
df$locality <- as_factor(df$locality)
unique(df$mosquito_net_yes)
df$mosquito_net_yes <- as_factor(df$mosquito_net_yes)
unique(df$child_under_5years_net_yes)
df$child_under_5years_net_yes <- as_factor(df$child_under_5years_net_yes)
unique(df$socio-economic_status)
unique(df$'socio-economic_status')
df$socio-economic_status <- as_factor(df$socio-economic_status)
df$'socio-economic_status' <- as_factor(df$'socio-economic_status')
unique(df$HH_members_ages)
git add .
installed.packages("tinttext")
install.packages()
knitr::opts_chunk$set(echo = TRUE)
options(warn = -1)
# required package
library(haven)
options(warn = -1)
# required package
pacman(haven)
install.packages('pacman')
options(warn = -1)
# required package
pacman(haven)
options(warn = -1)
# required package
pacman(haven)
options(warn = -1)
# required package
libs <- c('haven')
pacman(libs)
options(warn = -1)
# required package
libs <- c('haven')
pacman::p_load(libs)
# import data
houseH <- read_sav("DHS2020/RWPR81FL.sav")
options(warn = -1)
# required package
library(haven)
install.packages('haven')
options(warn = -1)
# required package
library(haven)
# import data
houseH <- read_sav("DHS2020/RWPR81FL.sav")
# data dimension
dim(houseH)
options(warn = -1)
# required package
library(haven)
# import data
houseH <- read_sav("DHS2020/RWPR81FL.sav")
# data dimension
dim(houseH)
# your code here
View(houseH)
str(houseH) # Understand the data structure (types, dimensions, column details).
data.frame(summary(houseH))  # summary statistics for each column
# top 6 rows
head(houseH)
# last 6 rows
tail(houseH)
# column names
names(houseH)
# counting missing values for columns
data.frame("Sum of Missing values by colmuns" = colSums(is.na(houseH)))
# identifying columns type
data.frame(sapply(houseH, class))
# your code here
columns <- c("HV001", "HV009", "HV010", "HV011", "HV014", "SHDISTRICT", "HV024", "HV025", "HV040", "HV227", "HV228", "HV270", "HV105", "HV106", "HML3", "HML4", "HML7",
"HML10", "HML22", "HML32","HML33", "HML35")
df <- houseH[,columns]
new_names <- c("cluster_no","no_HH_member","no_elig_wom_HH","no_elig_men_HH","child_under_5years","district",
"province","locality","cluster_alt_M","mosquito_net_yes","child_under_5years_net_yes",
"socio-economic_status","HH_members_ages","education_level","net_observed",
"months_since_net_obtained","net_brand","ITN","antenatal","malaria_measures",
"malaria_blood_T_result","malaria_rapid_T_result")
length(new_names)
names(df) <- new_names
dd <- unique(df$province)
as_factor(dd)
unique(df$HH_members_ages)
df$province <- as_factor(df$province)
df$district <- as_factor(df$district)
df$locality <- as_factor(df$locality)
df$mosquito_net_yes <- as_factor(df$mosquito_net_yes)
df$child_under_5years_net_yes <- as_factor(df$child_under_5years_net_yes)
df$'socio-economic_status' <- as_factor(df$'socio-economic_status')
df$child_under_5years_net_yes <- as_factor(df$child_under_5years_net_yes)
df$child_under_5years_net_yes <- as_factor(df$child_under_5years_net_yes)
\df$child_under_5years_net_yes <- as_factor(df$child_under_5years_net_yes)
View(df)
houseH$HV025
class(houseH$HV025)
length(class(houseH$HV025))
class(houseH$HV025)
"haven_labelled"%in% class(houseH$HV025)
sapply(df, class)
# your code here
columns <- c("HV001", "HV009", "HV010", "HV011", "HV014", "SHDISTRICT", "HV024", "HV025", "HV040", "HV227", "HV228", "HV270", "HV105", "HV106", "HML3", "HML4", "HML7",
"HML10", "HML22", "HML32","HML33", "HML35")
df <- houseH[,columns]
sapply(df, class)
decode <- function(data){
a = 0
for name in names(data){
decode <- function(data){
a = 0
for (name in names(data)){
if("haven_labelled" %in% class(data$name)){
a = a + 1
}
}
return(a)
}
sapply(df, decode)
decode <- function(data){
a = 0
for (name in names(data)){
if("haven_labelled" %in% class(data$name)){
aprint(name)
}
}
}
sapply(df, decode)
decode <- function(data){
a = 0
for (name in names(data)){
if("haven_labelled" %in% class(data$name)){
print(name)
}
}
}
sapply(df, decode)
View(decode)
decode <- function(data){
a = 0
for (name in names(data)){
if("haven_labelled" %in% class(data[[name]])){
print(name)
}
}
}
sapply(df, decode)
for (name in names(data)){
if("haven_labelled" %in% class(data[[name]])){
print(name)
}
}
data
apply(df, decode)
apply(df, FUN = decode)
apply(df,decode)
decode <- function(data){
for (name in names(data)){
if("haven_labelled" %in% class(data[[name]])){
print(name)
}
}
}
apply(df,decode)
decode <- function(data){
#for (name in names(data)){
if("haven_labelled" %in% class(data)){
print(data)
}
#}
}
apply(df,decode)
sapply(df,decode)
decode <- function(data){
#for (name in names(data)){
if("haven_labelled" %in% class(data)){
print(names(data))
}
#}
}
sapply(df,decode)
sapply(df,decode)
new_names <- c("cluster_no","no_HH_member","no_elig_wom_HH","no_elig_men_HH","child_under_5years","district",
"province","locality","cluster_alt_M","mosquito_net_yes","child_under_5years_net_yes",
"socio-economic_status","HH_members_ages","education_level","net_observed",
"months_since_net_obtained","net_brand","ITN","antenatal","malaria_measures",
"malaria_blood_T_result","malaria_rapid_T_result")
length(new_names)
names(df) <- new_names
sapply(df,decode)
decode <- function(data){
#for (name in names(data)){
if("haven_labelled" %in% class(data)){
print(class(data))
}
#}
}
sapply(df,decode)
decode <- function(data){
#for (name in names(data)){
if("haven_labelled" %in% class(data)){
print("found")
}else{
print("none")
}
#}
}
sapply(df,decode)
decode <- function(data){
if("haven_labelled" %in% class(data)){
data <- as_factor(data)
}
}
sapply(df,decode)
df <- sapply(df,decode)
View(df)
View(df)
df
df
View(df)
new_names <- c("cluster_no","no_HH_member","no_elig_wom_HH","no_elig_men_HH","child_under_5years","district",
"province","locality","cluster_alt_M","mosquito_net_yes","child_under_5years_net_yes",
"socio-economic_status","HH_members_ages","education_level","net_observed",
"months_since_net_obtained","net_brand","ITN","antenatal","malaria_measures",
"malaria_blood_T_result","malaria_rapid_T_result")
length(new_names)
names(df) <- new_names
View(df)
View(df)
knitr::opts_chunk$set(echo = TRUE)
options(warn = -1)
# required package
library(haven)
# import data
houseH <- read_sav("DHS2020/RWPR81FL.sav")
# data dimension
dim(houseH)
# your code here
View(houseH)
str(houseH) # Understanding the data structure (types, dimensions, column details).
data.frame(summary(houseH))  # summary statistics for each column
# top 6 rows
head(houseH)
# last 6 rows
tail(houseH)
# column names
names(houseH)
# counting missing values for columns
data.frame("Sum of Missing values by colmuns" = colSums(is.na(houseH)))
# identifying columns type
data.frame(sapply(houseH, class))
"haven_labelled" %in% class(houseH$HV025)
# your code here
columns <- c("HV001", "HV009", "HV010", "HV011", "HV014", "SHDISTRICT", "HV024", "HV025", "HV040", "HV227", "HV228", "HV270", "HV105", "HV106", "HML3", "HML4", "HML7",
"HML10", "HML22", "HML32","HML33", "HML35")
df <- houseH[,columns]
new_names <- c("cluster_no","no_HH_member","no_elig_wom_HH","no_elig_men_HH","child_under_5years","district",
"province","locality","cluster_alt_M","mosquito_net_yes","child_under_5years_net_yes",
"socio-economic_status","HH_members_ages","education_level","net_observed",
"months_since_net_obtained","net_brand","ITN","antenatal","malaria_measures",
"malaria_blood_T_result","malaria_rapid_T_result")
length(new_names)
names(df) <- new_names
View(df)
sapply(df,as_factor)
View(df)
df$province <- as_factor(df$province)
new_names <- c("cluster_no","no_HH_member","no_elig_wom_HH","no_elig_men_HH","child_under_5years","district",
"province","locality","cluster_alt_M","mosquito_net_yes","child_under_5years_net_yes",
"socio-economic_status","HH_members_ages","education_level","net_observed",
"months_since_net_obtained","net_brand","ITN","antenatal","malaria_measures",
"malaria_blood_T_result","malaria_rapid_T_result")
length(new_names)
names(df) <- new_names
View(df)
df <- houseH[,columns]
names(df) <- new_names
sapply(df,as_factor)
decode <- function(data){
for(col in names(data)){
if("haven_labelled" %in% class(data$col)){
data$col <- as_factor(data$col)
}
}
return(data)
}
df <- decode(df)
d <- decode(df)
View(d)
rm(d)
names(data)
decode <- function(data){
for(cname in names(data)){
if("haven_labelled" %in% class(data$cname)){
data$cname <- as_factor(data$cname)
}
}
return(data)
}
df <- decode(df)
df[1]
decode <- function(data){
for(i in 1:length(data)){
if("haven_labelled" %in% class(data[i])){
data[i] <- as_factor(data[i])
}
}
return(data)
}
df <- decode(df)
df <- decode(df)
View(df)
d <- decode(df)
View(d)
class(df[1])
class(df[4])
class(df$province)
class(df$cluster_no)
class(df[1])
class(df[[1])
class(df[[1]])
class(df[[9]])
class(df[[7]])
df[[7]]
decode <- function(data){
for(i in 1:length(data)){
if("haven_labelled" %in% class(data[[i]])){
data[[i]] <- as_factor(data[[i]])
}
}
return(data)
}
d <- decode(df)
View(d)
rm(d)
df <- decode(df)
unique(df$education_level)
# your code
colSums(df)
# your code
colSums(df)
# your code
colSums(is.na(df))
# your code
colSums(is.na(df)) > 0
# your code
colSums(is.na(df))
# your code
sapply(df, colsums,is.na=TRUE)
# your code
sapply(df, colSums,is.na=TRUE)
# your code
sapply(df, colSums)
# your code
sapply(df, is.na)
# your code
sapply(df, is.na, sum)
# your code
sapply(df, function(x) colSums(is.na(x)))
# your code
apply(df, function(x) colSums(is.na(x)))
# your code
apply(df, FUN = function(x) colSums(is.na(x)))
# your code
apply(df, 2, FUN = function(x) colSums(is.na(x)))
# your code
sapply(df, function(x) sum(is.na(x)))
# your code
sapply(df, function(x) data.frame(sum(is.na(x))))
# your code
sapply(df, function(x) data.frame(sum(is.na(x))))
# your code
sapply(df, function(x) sum(is.na(x))) %>% data.frame()
# your code
sapply(df, function(x) sum(is.na(x))) %>% data.frame()
install.packages('tidyverse')
# your code
library(dplyr)
sapply(df, function(x) sum(is.na(x))) %>% data.frame()
# your code
library(dplyr)
sapply(df, function(x) sum(is.na(x))) %>% data.frame() %>% sort()
# your code
library(dplyr)
sapply(df, function(x) sum(is.na(x))) %>% sort() %>% data.frame()
?sort()
sapply(df, function(x) sum(is.na(x))) %>% ?sort(decreasing = TRUE) %>% data.frame()
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame()
# your code
library(dplyr)
sapply(df, function(x) sum(is.na(x)), length(x)) %>% sort(decreasing = TRUE) %>% data.frame()
sapply(df, function(x) sum(is.na(x)), length(x)) %>% sort(decreasing = TRUE) %>% data.frame()
sapply(df, function(x) sum(is.na(x)) length(x)) %>% sort(decreasing = TRUE) %>% data.frame()
sapply(df, function(x) sum(is.na(x)), length(x)) %>% sort(decreasing = TRUE) %>% data.frame()
sapply(df, function(x) sum(is.na(x)), mean(x)) %>% sort(decreasing = TRUE) %>% data.frame()
sapply(df, function(x) c(sum(is.na(x)), mean(x))) %>% sort(decreasing = TRUE) %>% data.frame()
sapply(df, function(x) c(sum(is.na(x)), length(x))) %>% sort(decreasing = TRUE) %>% data.frame()
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame()
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame() %>% dims()
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame() %>% dim()
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame() %>% rename(1="nulls")
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame() %>% rename(1:"nulls")
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame() %>% rename(1="nulls")
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame() %>% rename( "nulls" = 1)
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame() %>% rename( "nulls" = 1) %>% mutate(s=nulls/length(x))
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame() %>% rename( "nulls" = 1) %>% mutate(s=nulls/nrows(df))
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame() %>% rename( "nulls" = 1) %>% mutate(s=nulls/nrow(df))
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame() %>% rename( "nulls" = 1) %>% mutate(s=round(nulls/nrow(df)*100,2))
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame() %>% rename( "null_count" = 1) %>% mutate(null_proprition=round(nulls/nrow(df)*100,2))
sapply(df, function(x) sum(is.na(x))) %>% sort(decreasing = TRUE) %>% data.frame() %>% rename( "null_count" = 1) %>% mutate(null_proprition=round(null_count/nrow(df)*100,2))
